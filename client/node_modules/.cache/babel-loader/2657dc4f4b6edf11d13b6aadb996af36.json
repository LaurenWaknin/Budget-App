{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\laure\\\\Desktop\\\\Developers Institute\\\\portfolio\\\\Budget-app\\\\frontend\\\\src\\\\Budget.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Stack } from \"react-bootstrap\";\nimport Container from \"react-bootstrap/Container\";\nimport AddBudgetWindow from \"./components/AddBudgetWindow\";\nimport AddExpenseWindow from \"./components/AddExpenseWindow\";\nimport ViewExpensesWindow from \"./components/ViewExpensesWindow\";\nimport BudgetCard from \"./components/BudgetCard\";\nimport UncategorizedBudgetCard from \"./components/UncategorizedBudgetCard\";\nimport TotalBudgetCard from \"./components/TotalBudgetCard\";\nimport { useState } from \"react\";\nimport { UNCATEGORIZED_BUDGET_ID, useBudgets } from \"./contexts/BudgetsContext\";\nimport React from \"react\";\nimport './App.css';\nimport Login from \"./Pages/login/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Budget() {\n  _s();\n\n  const [showAddBudgetWindow, setshowAddBudgetWindow] = useState(false);\n  const [showAddExpenseWindow, setShowAddExpenseWindow] = useState(false);\n  const [ViewExpensesWindowBudgetId, setViewExpensesWindowBudgetId] = useState();\n  const [AddExpenseWindowBudgetId, setAddExpenseWindowBudgetId] = useState();\n  const {\n    budgets,\n    getBudgetExpenses\n  } = useBudgets(); //function returns uncategorized by default\n  //opens Expense modal\n\n  function openAddExpenseWindow(budgetId) {\n    setShowAddExpenseWindow(true);\n    setAddExpenseWindowBudgetId(budgetId);\n  } // const isLogged = false;\n\n\n  const [isLogged, setIsLogged] = useState(true);\n\n  const toggleisLogged = () => {\n    setIsLogged(!isLogged);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lw\",\n    children: isLogged ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"horizontal\",\n          gap: \"2\",\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"me-auto text-warning\",\n            children: \"My Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setshowAddBudgetWindow(true),\n            children: \"Add Budget\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"light\",\n            onClick: openAddExpenseWindow,\n            children: \"Add Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n            gap: \"1rem\",\n            alignItems: \"flex-start\"\n          },\n          children: [budgets.map(budget => {\n            const amount = getBudgetExpenses(budget.id).reduce((total, expense) => total + expense.amount, 0);\n            return (\n              /*#__PURE__*/\n              // creates budget card\n              _jsxDEV(BudgetCard, {\n                name: budget.name,\n                amount: amount,\n                max: budget.max,\n                onAddExpenseClick: () => openAddExpenseWindow(budget.id),\n                onViewExpensesClick: () => setViewExpensesWindowBudgetId(budget.id)\n              }, budget.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)\n            );\n          }), /*#__PURE__*/_jsxDEV(UncategorizedBudgetCard, {\n            onAddExpenseClick: openAddExpenseWindow,\n            onViewExpensesClick: () => setViewExpensesWindowBudgetId(UNCATEGORIZED_BUDGET_ID)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TotalBudgetCard, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddBudgetWindow, {\n        show: showAddBudgetWindow,\n        handleClose: () => setshowAddBudgetWindow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddExpenseWindow, {\n        show: showAddExpenseWindow,\n        defaultBudgetId: AddExpenseWindowBudgetId,\n        handleClose: () => setShowAddExpenseWindow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ViewExpensesWindow, {\n        budgetId: ViewExpensesWindowBudgetId,\n        handleClose: () => setViewExpensesWindowBudgetId()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        isLoggedHandler: toggleisLogged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Budget, \"i8DoyL9xv0WMHvGPhxxL+4aG3kI=\", false, function () {\n  return [useBudgets];\n});\n\n_c = Budget;\nexport default Budget;\n\nvar _c;\n\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"sources":["C:/Users/laure/Desktop/Developers Institute/portfolio/Budget-app/frontend/src/Budget.js"],"names":["Button","Stack","Container","AddBudgetWindow","AddExpenseWindow","ViewExpensesWindow","BudgetCard","UncategorizedBudgetCard","TotalBudgetCard","useState","UNCATEGORIZED_BUDGET_ID","useBudgets","React","Login","Budget","showAddBudgetWindow","setshowAddBudgetWindow","showAddExpenseWindow","setShowAddExpenseWindow","ViewExpensesWindowBudgetId","setViewExpensesWindowBudgetId","AddExpenseWindowBudgetId","setAddExpenseWindowBudgetId","budgets","getBudgetExpenses","openAddExpenseWindow","budgetId","isLogged","setIsLogged","toggleisLogged","display","gridTemplateColumns","gap","alignItems","map","budget","amount","id","reduce","total","expense","name","max"],"mappings":"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","sourcesContent":["import { Button, Stack } from \"react-bootstrap\"\nimport Container from \"react-bootstrap/Container\"\nimport AddBudgetWindow from \"./components/AddBudgetWindow\"\nimport AddExpenseWindow from \"./components/AddExpenseWindow\"\nimport ViewExpensesWindow from \"./components/ViewExpensesWindow\"\nimport BudgetCard from \"./components/BudgetCard\"\nimport UncategorizedBudgetCard from \"./components/UncategorizedBudgetCard\"\nimport TotalBudgetCard from \"./components/TotalBudgetCard\"\nimport { useState } from \"react\"\nimport { UNCATEGORIZED_BUDGET_ID, useBudgets } from \"./contexts/BudgetsContext\"\nimport React from \"react\"\nimport './App.css'\nimport Login from \"./Pages/login/Login\";\n\nfunction Budget() {\n    \n    const [showAddBudgetWindow, setshowAddBudgetWindow] = useState(false)\n    const [showAddExpenseWindow, setShowAddExpenseWindow] = useState(false)\n    const [ViewExpensesWindowBudgetId, setViewExpensesWindowBudgetId] = useState()\n    const [AddExpenseWindowBudgetId, setAddExpenseWindowBudgetId] = useState()\n    const { budgets, getBudgetExpenses } = useBudgets()\n\n    //function returns uncategorized by default\n    //opens Expense modal\n    function openAddExpenseWindow(budgetId) {\n        setShowAddExpenseWindow(true)\n        setAddExpenseWindowBudgetId(budgetId)\n    }\n\n\n    // const isLogged = false;\n\n    const [isLogged, setIsLogged] = useState(true)\n    const toggleisLogged = () => {\n        setIsLogged(!isLogged)\n    }\n\n    return(\n    <div className='lw'>\n        {isLogged ? <>\n            <Container className=\"my-4\">\n                <Stack direction=\"horizontal\" gap=\"2\" className=\"mb-4\">\n                    <h1 className=\"me-auto text-warning\" >My Budget</h1>\n                    {/* Add Budget Button and opens Budget modal */}\n                    {/* variant = black button */}\n                    <Button variant=\"primary\" onClick={() => setshowAddBudgetWindow(true)}>\n                        Add Budget\n                    </Button>\n                    {/* Add Expense Button and opens Expense modal */}\n                    {/* variant = grey button */}\n                    <Button variant=\"light\" onClick={openAddExpenseWindow}>\n                        Add Expense\n                    </Button>\n                </Stack>\n                <div\n                    style={{\n                        display: \"grid\",\n                        gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n                        gap: \"1rem\",\n                        alignItems: \"flex-start\",\n                    }}\n                >\n                    {/* gets the total of an expense (via same budget id)\n          default value is 0 */}\n                    {budgets.map(budget => {\n                        const amount = getBudgetExpenses(budget.id).reduce(\n                            (total, expense) => total + expense.amount,\n                            0\n                        )\n                        return (\n                            // creates budget card\n                            <BudgetCard\n                                key={budget.id}\n                                name={budget.name}\n                                amount={amount}\n                                max={budget.max}\n                                onAddExpenseClick={() => openAddExpenseWindow(budget.id)}\n                                onViewExpensesClick={() =>\n                                    setViewExpensesWindowBudgetId(budget.id)\n                                }\n                            />\n                        )\n                    })}\n                    {/* creates uncategorized modal */}\n                    <UncategorizedBudgetCard\n                        onAddExpenseClick={openAddExpenseWindow}\n                        onViewExpensesClick={() =>\n                            setViewExpensesWindowBudgetId(UNCATEGORIZED_BUDGET_ID)\n                        }\n                    />\n                    {/* creates total budget modal */}\n                    <TotalBudgetCard />\n                </div>\n            </Container>\n            {/* add budget modal */}\n            <AddBudgetWindow\n                show={showAddBudgetWindow}\n                handleClose={() => setshowAddBudgetWindow(false)}\n            />\n            {/* add expense modal */}\n            <AddExpenseWindow\n                show={showAddExpenseWindow}\n                defaultBudgetId={AddExpenseWindowBudgetId}\n                handleClose={() => setShowAddExpenseWindow(false)}\n            />\n            {/* view expense modal */}\n            <ViewExpensesWindow\n                budgetId={ViewExpensesWindowBudgetId}\n                handleClose={() => setViewExpensesWindowBudgetId()}\n            />\n\n        </> : <><Login isLoggedHandler={toggleisLogged} /></>}\n    </div>\n    )\n}\n\nexport default Budget"]},"metadata":{},"sourceType":"module"}